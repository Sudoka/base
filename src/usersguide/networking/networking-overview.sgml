<!-- 
$Id: networking-overview.sgml,v 1.9 2010/06/08 00:06:11 bruno Exp $

Administration guide

@Copyright@
@Copyright@

$Log: networking-overview.sgml,v $
Revision 1.9  2010/06/08 00:06:11  bruno
removed the eth0 restriction from the docs

Revision 1.8  2010/01/14 23:49:12  bruno
no more 'gateway' command.

Revision 1.7  2009/08/18 17:58:44  bruno
how to cross-kickstart with PXE

Revision 1.6  2009/07/28 17:52:20  bruno
be consistent all references to 'vlanid' should be 'vlan'

Revision 1.5  2009/07/21 23:48:03  bruno
add info about how to set a gateway with 'rocks add host route'

Revision 1.4  2009/06/19 00:44:52  bruno
touch up

Revision 1.3  2008/09/14 04:59:11  phil
Added some adminstrative examples. Needs more.

Revision 1.2  2008/09/13 04:38:20  phil
VLAN interfaces, Logical and Physical.

Revision 1.1  2008/09/13 00:41:43  phil
First crack at networking section (incomplete).

-->

<section><title>Networks, Subnets, VLANs and Interfaces</title>
<para> 
Rocks uses a SQL database to hold information about nodes including network device information.
In version 5.1 support was added for VLAN tagged interfaces to enable construction of virtual clusters
and other more complicated network scenarios. There are a large number of commands that allow manipulation of
subnet definitions, physical interfaces, and logical VLAN interfaces.  
</para>
<note><para>
The basic model of operation is for 
an administrator to use a series of commands to add and set/change networking definitions in the database 
and then either re-install a node or reconfigure/restart the network configuration by calling  
<computeroutput>rocks sync config &lt;host&gt;</computeroutput>.
</para></note>
</section>
<!-- ####################################### -->

<section><title>Named Networks/Subnets</title>
<para>
Rocks clusters are required to have two subnets defined: "public" and "private", but a cluster owner
can define more subnets.  The commmand <computeroutput>rocks list network</computeroutput> lists the defined 
networks
</para>
<screen>
[root@rocks ~]# rocks list network
NETWORK    SUBNET       NETMASK      
private:   172.16.254.0 255.255.255.0
public:    132.239.8.0  255.255.255.0
optiputer: 67.58.32.0   255.255.224.0
</screen>

<para>
In the screen above, the additional network called "optiputer" is defined with netmask 255.255.224.0(/19).
To add a network called "fast" as 192.168.1.0 and netmask 255.255.255.0(/24) do the following 
</para>

<screen>
[root@rocks ~]# rocks add network fast subnet=192.168.1.0 netmask=255.255.255.0
[root@rocks ~]# rocks list network
NETWORK    SUBNET       NETMASK      
private:   172.16.254.0 255.255.255.0
public:    132.239.8.0  255.255.255.0
optiputer: 67.58.32.0   255.255.224.0
fast:      192.168.1.0  255.255.255.0
</screen>
<para>
The subnet and netmask of an existing network can be changed using 
<computeroutput>rocks set network subnet</computeroutput> and 
<computeroutput>rocks set network netmask</computeroutput> commands.  
</para>

</section> 
<section><title>Host Interfaces</title>
<para>There are three types of interfaces that a cluster owner may need to be concerned about: physical, logical, and
VLAN (virtual LAN) bridges. Linux (and other OSes like Solaris) support logical interfaces that share a 
particular physical network port.
The following shows physical network devices and associations of those 
devices to a named network (or subnet, used interchangably in this discussion).
In the figures below, the /&lt;nn&gt; notation is a standard method of how to
specify the number of bits in the netmask.
Examples include: /24=255.255.255.0 (Class C subnet), /16=255.255.0.0 (Class B subnet), /8=255.0.0.0 (Class A subnet) and /25=255.255.255.128
        <mediaobject>
                <imageobject>
                <imagedata fileref="images/PhysicalNetworks.png" scale=50>
                </imageobject>
		<caption>
			<para> FIGURE: Hosts can have any number of physical
			networking devices. Every Rocks node must have a
			private network defined (e.g., eth0).
			Frontends also must have a separate public network
			(e.g., eth1).
			Other devices could be myri0 (for Myrinet) or ib0 
			(for Infiniband).
			</para>
		</caption>
        </mediaobject>
</para>
<para>
Adding a new network interface to a host can be done from the command line. For example, to add an interface
named "myri0" with IP address 192.168.1.10 on the logical subnet "fast":
</para>
<screen>
[root@rocks ~]# rocks add host interface compute-0-0-1 iface=myri0 subnet=fast ip=192.168.1.10
[root@rocks ~]# rocks list host interface compute-0-0-1
SUBNET  IFACE MAC               IP             NETMASK       MODULE NAME          VLAN
private eth0  00:16:3e:00:00:11 172.16.254.192 255.255.255.0 xennet compute-0-0-1 ------
fast    myri0 ----------------- 192.168.1.10   255.255.255.0 ------ ------------- ------
</screen>
<para>
You can also set other fields for a host interface (if the field is one of
[mac, ip, module, name, vlan]) with 
the command <computeroutput>rocks set host interface &lt;field&gt; &lt;host&gt; iface=&lt;iface&gt; value</computeroutput>.
To set the name associated with the myri0 interface to compute-myri-0-0-1 on
the node compute-0-0-1, execute:
</para>
<para>
<screen>
[root@rocks ~]# rocks set host interface name compute-0-0-1 iface=myri0 compute-myri-0-0-1
[root@rocks ~]# rocks list host interface compute-0-0-1
SUBNET  IFACE MAC               IP             NETMASK       MODULE NAME               VLAN
private eth0  00:16:3e:00:00:11 172.16.254.192 255.255.255.0 xennet compute-0-0-1      ------
fast    myri0 ----------------- 192.168.1.10   255.255.255.0 ------ compute-myri-0-0-1 ------
</screen>
</para>
</section>
