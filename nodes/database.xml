<?xml version="1.0" standalone="no"?>

<kickstart>

  <description>

  NPACI Rocks Cluster Database. Includes client programs,
  python libraries, and Apache configuration.

  </description>

        <copyright>
        Copyright (c) 2000 - 2008 The Regents of the University of California.
        All rights reserved. Rocks(r) v5.1 www.rocksclusters.org
        </copyright>

  <changelog>
  $Log: database.xml,v $
  Revision 1.19  2009/03/31 00:23:29  anoop
  Merged the remainder of the solaris XML files to the base roll

  Revision 1.18  2009/03/24 22:24:55  bruno
  got rid of the last dbreport - dbreport is now dead.

  Revision 1.17  2009/03/21 22:22:55  bruno
   - lights-out install of VM frontends with new node_rolls table
   - nuked 'site' columns and tables from database
   - worked through some bugs regarding entities

  Revision 1.16  2009/01/23 21:50:23  bruno
  var tags converted to entities

  Revision 1.15  2008/10/18 00:55:45  mjk
  copyright 5.1

  Revision 1.14  2008/03/06 23:41:30  mjk
  copyright storm on

  Revision 1.13  2007/08/14 19:20:07  bruno
  remove dead code

  remove the file that was used to access the database via the web on our
  old web site (prior to wordpress)

  Revision 1.12  2007/07/05 21:38:58  phil
  Run phpMyAdmin as user nobody. Allows the DB to be looked at, but not changed

  Revision 1.11  2007/07/05 20:23:45  bruno
  users can select

  Revision 1.10  2007/07/03 04:58:42  phil
  Add a password for apache access to the database.
  Randomly generate password and store in /root/.my.cnf.
  Modify rocks.py and sql.py to read the password, if available

  Revision 1.9  2007/06/23 04:03:18  mjk
  mars hill copyright

  Revision 1.8  2007/05/30 23:27:16  anoop
  Moved the security information that apache uses to log into mysql to the
  database.xml file.
  Schema changed slightly to clean column names

  Main changes are the use of command line tools to manipulate the database
  rather than using sql syntax directly. Still in beta stage.

  Revision 1.7  2006/07/07 13:17:02  bruno
  change mode to owner

  Revision 1.6  2006/07/06 23:53:17  bruno
  stripped out old upgrade procedure

  Revision 1.5  2006/06/06 00:48:18  anoop
  Change permissions of /var/www/html/labels to be owned by apache. Otherwise creation
  of labels.pdf is impossible.

  Revision 1.4  2006/06/02 22:16:46  anoop
  Undo changes on the database access schema.
  Add info stating that database can be accessed readonly from within the network
  Also from outside the network only root can access the database

  Revision 1.3  2006/06/01 21:58:26  anoop
  Changed phpMyAdmin access permissions

  Revision 1.2  2005/05/23 23:59:21  fds
  Frontend Restore

  Revision 1.1  2005/03/04 01:40:04  mjk
  massive graph cleanup

  Revision 1.1  2005/03/01 00:22:26  mjk
  moved to base roll

  Revision 1.7  2005/02/15 22:58:52  mjk
  dtd is gone

  Revision 1.6  2004/10/18 21:12:57  bruno
  really, really make sure mx is off on itanium

  Revision 1.5  2004/10/16 04:25:55  bruno
  on itaniums, mx causes dbreport to seg fault

  Revision 1.4  2004/07/16 11:42:15  bruno
  needed to quote the password setting for apache.

  this is releated to bug 11.

  Revision 1.3  2004/07/12 21:19:28  fds
  Apache security tweaks

  Revision 1.2  2004/04/26 20:27:56  fds
  Safer Mysql. As Eric D Christensen pointed out, it is easy for users to
  accidentally disrupt the system by altering the database. We protect from
  outside menaces, but allow read-write access to anyone from localhost.

  This protects read-write access with SSL and passwords, like our wiki. It
  is not close to being secure, since the -uapache is an option, but it
  1) Prevents accidental changes from users via the web-interface, and
  2) Allows admins to access the database safely over the wide-area.

  I have also made a read-only access link, which is accessible for all users
  but does not allow modification. In addition, users from localhost can
  get read-only access from the command line without specifying -uapache. This
  is intended to protect against casual mistakes only.

  Left to the next release: a secure and easy way for kcgi to access the
  database as user apache.

  Revision 1.1  2004/03/08 21:01:23  mjk
  *** empty log message ***

  Revision 1.32  2004/02/03 20:00:35  mjk
  decolorize

  Revision 1.31  2004/01/30 04:53:42  mjk
  colorize

  Revision 1.30  2003/07/16 20:10:41  bruno
  changed to new 'file' tag

  Revision 1.29  2003/07/07 20:09:15  bruno
  new for rolls

  Revision 1.28  2002/11/11 02:06:48  fds
  New style configuration for PhpMyAdmin.

  Revision 1.27  2002/10/19 02:54:51  bruno
  syntax error fix in php config

  Revision 1.26  2002/10/18 19:45:32  fds
  Further PHPMyAdmin configuration using awk.

  Revision 1.25  2002/10/16 16:39:34  bruno
  more fixes

  Revision 1.24  2002/10/09 23:16:27  bruno
  fixup of package names to match our new source tree

  Revision 1.23  2002/10/03 18:30:17  mjk
  add dbreport

  Revision 1.22  2002/08/16 00:38:08  bruno
  latest update changes

  Revision 1.21  2002/07/11 23:13:31  bruno
  fixed more 'frontend-0' hardcoded badness

  Revision 1.20  2002/07/03 23:33:11  bruno
  7.3 fixes

  Revision 1.19  2002/06/24 21:31:09  mjk
  Static cluster structure.
  Do not refer to live database for table structure.

  Revision 1.18  2002/06/11 20:20:28  mjk
  Added support for release tag

  Revision 1.17  2002/04/15 21:59:03  bruno
  fix for dhcp and start of ia64 tweaks

  Revision 1.16  2002/02/27 00:23:21  mjk
  Added WebForm to memberships table (we need it on all frontends)

  Revision 1.15  2002/02/25 19:51:50  mjk
  - Changed default kcgi membership from "External" to "Laptop"
  - Fixed NFS appliance default data
  - Added database access for frontend-0 (or whatever it's named)

  Revision 1.14  2002/02/25 17:27:30  bruno
  fixes for 2.2

  Revision 1.13  2002/02/15 21:44:09  mjk
  Release and DTF changes

  Revision 1.12  2002/02/14 18:47:18  mjk
  Table version numbers are no cumulative.  Add all tables with versions
  less than or equal to the version coded in this files.

  Revision 1.11  2002/02/14 02:12:29  mjk
  - Removed CD copy gui code from insert-ethers
  - Added CD copy code back to install.xml (using rocks-dist)
  - Added copycd command to rocks-dist
  - Added '-' packages logic to kgen
  - Other file changed to support above

  Revision 1.10  2002/02/05 22:38:46  mjk
  7.2

  Revision 1.9  2002/01/23 20:24:57  bruno
  added web page module (a link to the database now shows up in homepage)

  Revision 1.8  2002/01/18 23:27:32  bruno
  updates for 7.2

  Revision 1.7  2001/10/31 18:23:00  bruno
  removed 'Dead' membership

  removed 'i386' from distributions

  Revision 1.6  2001/10/31 00:35:10  bruno
  rocks v2.1.1 updates

  Revision 1.5  2001/10/18 20:06:45  mjk
  Changes groups table to memberships

  Revision 1.4  2001/10/17 17:27:18  mjk
  - Pull app_global table data

  Revision 1.3  2001/10/17 17:07:55  mjk
  uno mas

  Revision 1.2  2001/10/16 21:37:12  mjk
  - SQL table structure from live db, and some base data
  - fixed nisdomain stuff

  Revision 1.1  2001/10/05 18:59:49  mjk
  *** empty log message ***

  </changelog>

  <package os='linux'>rocks-sql</package>
  <package os='linux'>mysql</package>
  <package os='linux'>mysql-server</package>
  <package os='linux'>mysql-devel</package>
  <package os='linux'>MySQL-python</package>
  <package os='linux'>php-mysql</package>
  <package os='linux'>phpMyAdmin</package>

  <package os="sunos">ROCKSrocks-dbreport</package>
  <package os="sunos">ROCKSfoundation-mysql</package>
  <package os="sunos">ROCKSphpMyAdmin</package>

<!-- ia64 no longer relevant
<post arch="ia64">
rpm -e \-\-nodeps mx
</post>
-->

<post>

<!--
	set the hostname to the private name. this helps the rocks command
	line find the host 'localhost' correctly
-->
/bin/hostname &Kickstart_PrivateHostname;

</post>


<post os='linux'>


<!-- tweak permissions so apache can contact the local mysql server -->

if [ -d /var/lib/mysql ]; then
	chmod a+rx /var/lib/mysql
fi

<!-- fixup mysqld init file -->

if [ -f /etc/rc.d/init.d/mysqld ]; then
	sed -e "s%\/etc\/init.d%\/etc\/rc.d\/init.d%" \
		/etc/rc.d/init.d/mysqld > /tmp/mysqld

	mv /tmp/mysqld /etc/rc.d/init.d/
	chmod 755 /etc/rc.d/init.d/mysqld
	/sbin/chkconfig mysqld on
fi


<!-- start database and wait for it to come up -->

/etc/rc.d/init.d/mysqld restart

/usr/bin/mysqladmin -s ping > /dev/null
while [ $? -eq 1 ]; do
	sleep 1
	/usr/bin/mysqladmin -s ping > /dev/null
done

<!-- Make our Rocks phpMyAdmin config file. -->
<file name="/var/www/html/admin/phpMyAdmin/rocks.conf">
&lt;?php
#
# The rw Rocks PhpMyAdmin configuration file.
# Assumes apache user has rw access.
#  
$cfg['PmaAbsoluteUri_DisableWarning'] = 'TRUE';
$cfg['Servers'][1]['user'] = 'nobody';
$cfg['Servers'][1]['host'] = 'localhost'; 
$cfg['Servers'][1]['only_db'] = 'cluster';
$cfg['MaxRows'] = 150;
?&gt;
</file>

<!-- Append our Rocks config file to the default config file. -->
<file name="/var/www/html/admin/phpMyAdmin/config.inc.php">
&lt;?php include_once "rocks.conf"; ?&gt;
</file>

<!-- For Read-Only database view. -->
cp -r /var/www/html/admin/phpMyAdmin /var/www/html/

<file name="/var/www/html/phpMyAdmin/rocks.conf">
&lt;?php
#
# The read-only Rocks PhpMyAdmin configuration file.
# Assumes 'nobody' user has only select access.
#  
$cfg['PmaAbsoluteUri_DisableWarning'] = 'TRUE';
$cfg['Servers'][1]['user'] = 'nobody';
$cfg['Servers'][1]['host'] = 'localhost'; 
$cfg['Servers'][1]['only_db'] = 'cluster';
$cfg['MaxRows'] = 150;
?&gt;
</file>

<!-- Password for web admin access -->
<file name="/etc/httpd/conf/passwd-mysql" perms="0440" owner="root.apache">
root:&Kickstart_PrivateRootPassword;
</file>

<!-- Apache configuration -->
<file name="/etc/httpd/conf.d/myadmin.conf">

&lt;Directory "/var/www/html/admin/phpMyAdmin"&gt;
	SSLRequireSSL
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	AuthName "Cluster Database"
	AuthType Basic
	AuthUserFile /etc/httpd/conf/passwd-mysql
	Require user root
&lt;/Directory&gt;
&lt;Directory "/var/www/html/phpMyAdmin"&gt;
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	Order deny,allow
	Allow from &Kickstart_PrivateNetwork;/&Kickstart_PrivateNetmask;
	Allow from 127.0.0.1
	Deny from all
&lt;/Directory&gt;
</file>


<!-- Change the permission of /var/www/html/labels/ to be owned by apache -->
chown -R apache /var/www/html/labels/

</post>

<post os='sunos'>

<!-- tweak permissions so apache can contact the local mysql server -->
groupadd -g 403 rocksdb
if [ -d /var/opt/rocks/mysql ]; then
	chgrp -R rocksdb /var/opt/rocks/mysql
	chmod -R g+rwx /var/opt/rocks/mysql
fi

useradd -u 403 -g rocksdb \
	-d /var/opt/rocks/mysql \
	-m -s /bin/false	\
	rocksdb

chown -R rocksdb /var/opt/rocks/mysql
chmod a+rx /var/opt/rocks/mysql

/opt/rocks/bin/mysql_install_db --user=rocksdb
<!-- start database and wait for it to come up -->

/lib/svc/method/mysqld start

/opt/rocks/bin/mysqladmin -s ping > /dev/null
while [ $? -eq 1 ]; do
	sleep 1
	/opt/rocks/bin/mysqladmin -s ping > /dev/null
done

cp -f /opt/rocks/share/mysql/mysql-server.xml \
	/var/svc/manifest/network/mysql-server.xml
<service name='network/mysql' enabled='yes'/>

<!-- Make our Rocks phpMyAdmin config file. -->
<file name="/var/apache2/htdocs/admin/phpMyAdmin/rocks.conf">
&lt;?php
#
# The rw Rocks PhpMyAdmin configuration file.
# Assumes apache user has rw access.
#  
$cfg['PmaAbsoluteUri_DisableWarning'] = 'TRUE';
$cfg['Servers'][1]['user'] = 'nobody';
$cfg['Servers'][1]['host'] = 'localhost'; 
$cfg['Servers'][1]['only_db'] = 'cluster';
$cfg['MaxRows'] = 150;
?&gt;
</file>

<!-- Append our Rocks config file to the default config file. -->
<file name="/var/apache2/htdocs/admin/phpMyAdmin/config.inc.php">
&lt;?php include_once "rocks.conf"; ?&gt;
</file>

<!-- For Read-Only database view. -->
cp -r /var/apache2/htdocs/admin/phpMyAdmin /var/apache2/htdocs/

<file name="/var/apache2/htdocs/phpMyAdmin/rocks.conf">
&lt;?php
#
# The read-only Rocks PhpMyAdmin configuration file.
# Assumes 'nobody' user has only select access.
#  
$cfg['PmaAbsoluteUri_DisableWarning'] = 'TRUE';
$cfg['Servers'][1]['user'] = 'nobody';
$cfg['Servers'][1]['host'] = 'localhost'; 
$cfg['Servers'][1]['only_db'] = 'cluster';
$cfg['MaxRows'] = 150;
?&gt;
</file>

<!-- Password for web admin access -->
<file name="/etc/apache2/passwd-mysql" perms="0440" owner="root:webservd">
root:<var name="Kickstart_PrivateRootPassword"/>
</file>

<!-- Apache configuration -->
<file name="/etc/apache2/myadmin.conf">

&lt;Directory "/var/apache2/htdocs/admin/phpMyAdmin"&gt;
	SSLRequireSSL
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	AuthName "Cluster Database"
	AuthType Basic
	AuthUserFile /etc/apache2/passwd-mysql
	Require user root
&lt;/Directory&gt;
&lt;Directory "/var/apache2/htdocs/phpMyAdmin"&gt;
	Options FollowSymLinks Indexes ExecCGI
	AllowOverride None
	Order deny,allow
	Allow from <var name="Kickstart_PrivateNetwork"/>/<var name="Kickstart_PrivateNetmask"/>
	Allow from 127.0.0.1
	Deny from all
&lt;/Directory&gt;
</file>

<file name="/etc/apache2/httpd.conf" mode="append">

Include /etc/apache2/myadmin.conf
</file>
</post>

<post>

<!-- Read/Write access to apache user, read-only for other normal users -->

<file name="/tmp/perms.sql" perms="0400">
grant select,update,insert,delete,lock tables on cluster.* to apache@localhost;
grant select,update,insert,delete,lock tables on cluster.* to apache@"&Kickstart_PrivateHostname;";
grant select on cluster.* to ''@localhost;
</file>
</post>

<post os='linux'>
/usr/bin/mysql mysql &lt; /tmp/perms.sql
</post>

<post os='sunos'>
/opt/rocks/bin/mysql mysql &lt; /tmp/perms.sql
</post>

</kickstart> 
