<?xml standalone='no' version='1.0' ?>

<kickstart>

<post interpreter='/opt/rocks/bin/python'>
import os
import sys
import re
from MySQLdb import *

d = connect(user='root',
	db='cluster',
	unix_socket='/var/opt/rocks/mysql/mysql.sock')

try:
	db = d.cursor()
except:
	sys.exit(-1)

db.execute('show tables')

tables = db.fetchall()
sec_re = re.compile('sec_[a-zA-Z]*_attributes')
cmd_set = []
for (tab_name,) in tables:
	if sec_re.match(tab_name):
		cmd_set.append('grant usage on cluster.%s to ""@"localhost"' % tab_name)
		cmd_set.append('grant usage on cluster.%s to ""@"%%.local"' % tab_name)
		cmd_set.append('grant usage on cluster.%s to "apache"@"localhost"' % tab_name)
		cmd_set.append('grant usage on cluster.%s to "apache"@"&Kickstart_PrivateHostname;"' % tab_name)

	else:
		cmd_set.append('grant select on cluster.%s to ""@"localhost"' % tab_name)
		cmd_set.append('grant select on cluster.%s to ""@"%%.local"' % tab_name)
		cmd_set.append('grant select,insert,update,delete,lock tables on cluster.%s to "apache"@"localhost"' % tab_name)
		cmd_set.append('grant select, insert, update, delete, lock tables on cluster.%s to "apache"@"&Kickstart_PrivateHostname;"' % tab_name)


for cmd in cmd_set:
	db.execute(cmd)

</post>
</kickstart>
